{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nb201803m042/Documents/823/10.work/90.\\u52C9\\u5F37/90.\\u81EA\\u5B66\\u7FD2/50.React/01_calculator/training-for-react-calculator/src/CalculatorApp.js\";\nimport React from 'react';\nimport { NumBtn } from \"./components/NumBtn\";\nimport { OperatorBtn } from \"./components/OperatorBtn\";\nexport class CalculatorApp extends React.Component {\n  constructor() {\n    super();\n\n    this.clickNum = number => {\n      if (this.state.operator === \"\") {\n        this.setState({\n          displayNum: this.state.displayNum + number\n        });\n      } else {\n        this.setState({\n          inputNum: this.state.inputNum + number\n        });\n      }\n    };\n\n    this.clickOperator = operator => {\n      this.setState({\n        operator: event.target.operator\n      });\n    };\n\n    this.state = {\n      displayNum: \"\",\n      inputNum: \"\",\n      operator: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text\",\n        children: [\"displayNum : \", this.state.displayNum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text\",\n        children: [\"inputNum : \", this.state.inputNum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumBtn, {\n        clickNum: this.clickNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OperatorBtn, {\n        clickOperator: this.clickOperator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/nb201803m042/Documents/823/10.work/90.勉強/90.自学習/50.React/01_calculator/training-for-react-calculator/src/CalculatorApp.js"],"names":["React","NumBtn","OperatorBtn","CalculatorApp","Component","constructor","clickNum","number","state","operator","setState","displayNum","inputNum","clickOperator","event","target","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AAEA,OAAO,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AACjDC,EAAAA,WAAW,GAAE;AACX;;AADW,SAoBbC,QApBa,GAoBFC,MAAM,IAAI;AACnB,UAAG,KAAKC,KAAL,CAAWC,QAAX,KAAwB,EAA3B,EAA+B;AAC7B,aAAKC,QAAL,CAAc;AAACC,UAAAA,UAAU,EAAE,KAAKH,KAAL,CAAWG,UAAX,GAAwBJ;AAArC,SAAd;AACD,OAFD,MAEO;AACL,aAAKG,QAAL,CAAc;AAACE,UAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI,QAAX,GAAsBL;AAAjC,SAAd;AACD;AACF,KA1BY;;AAAA,SA2BbM,aA3Ba,GA2BGJ,QAAQ,IAAI;AAC1B,WAAKC,QAAL,CAAc;AACZD,QAAAA,QAAQ,EAAEK,KAAK,CAACC,MAAN,CAAaN;AADX,OAAd;AAGD,KA/BY;;AAEX,SAAKD,KAAL,GAAa;AACXG,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXH,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKD;;AACDO,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,oCAAkC,KAAKR,KAAL,CAAWG,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,kCAAgC,KAAKH,KAAL,CAAWI,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,KAAKN;AAAvB;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,WAAD;AAAa,QAAA,aAAa,EAAE,KAAKO;AAAjC;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAnBgD","sourcesContent":["import React from 'react';\nimport { NumBtn } from \"./components/NumBtn\";\nimport { OperatorBtn } from \"./components/OperatorBtn\";\n\nexport class CalculatorApp extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      displayNum: \"\",\n      inputNum: \"\",\n      operator: \"\",\n    };\n  }\n  render() {\n    return (\n      <div>\n        <h2>Calculator</h2>\n        <p className=\"text\">displayNum : {this.state.displayNum}</p>\n        <p className=\"text\">inputNum : {this.state.inputNum}</p>\n        <NumBtn clickNum={this.clickNum} />\n        <OperatorBtn clickOperator={this.clickOperator} />\n      </div>\n    );\n  }\n\n  clickNum = number => {\n    if(this.state.operator === \"\") {\n      this.setState({displayNum: this.state.displayNum + number});\n    } else {\n      this.setState({inputNum: this.state.inputNum + number});\n    }\n  }\n  clickOperator = operator => {\n    this.setState({\n      operator: event.target.operator\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}