{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nb201803m042/Documents/823/10.work/90.\\u52C9\\u5F37/90.\\u81EA\\u5B66\\u7FD2/50.React/01_calculator/training-for-react-calculator/src/components/NumBtn.js\";\nimport React from 'react';\nimport \"../css/NumBtn.css\";\nexport class NumBtn extends React.Component {\n  constructor() {\n    super();\n\n    this.input = event => {\n      if (this.state.operator === \"\") {\n        this.setState({\n          displayNum: this.state.displayNum + event.target.value\n        });\n      } else {\n        this.setState({\n          inputNum: this.state.inputNum + event.target.value\n        });\n      }\n    };\n\n    this.onOperator = event => {\n      this.setState({\n        operator: event.target.value\n      });\n    };\n\n    this.calculate = () => {\n      switch (this.state.operator) {\n        case '+':\n          this.setState({\n            displayNum: Number(this.state.displayNum) + Number(this.state.inputNum)\n          });\n          break;\n\n        case '-':\n          this.setState({\n            displayNum: Number(this.state.displayNum) - Number(this.state.inputNum)\n          });\n          break;\n\n        case '*':\n          this.setState({\n            displayNum: Number(this.state.displayNum) * Number(this.state.inputNum)\n          });\n          break;\n\n        case '/':\n          this.setState({\n            displayNum: Number(this.state.displayNum) / Number(this.state.inputNum)\n          });\n          break;\n      }\n\n      this.setState({\n        inputNum: \"\"\n      });\n    };\n\n    this.state = {\n      displayNum: \"\",\n      inputNum: \"\",\n      operator: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"displayNum : \", this.state.displayNum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"inputNum : \", this.state.inputNum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.input,\n        value: 0,\n        className: \"NumBtn\",\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.input,\n        value: 1,\n        className: \"NumBtn\",\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.input,\n        value: 2,\n        className: \"NumBtn\",\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.input,\n        value: 3,\n        className: \"NumBtn\",\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.input,\n        value: 4,\n        className: \"NumBtn\",\n        children: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.input,\n        value: 5,\n        className: \"NumBtn\",\n        children: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.input,\n        value: 6,\n        className: \"NumBtn\",\n        children: \"6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.input,\n        value: 7,\n        className: \"NumBtn\",\n        children: \"7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.input,\n        value: 8,\n        className: \"NumBtn\",\n        children: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.input,\n        value: 9,\n        className: \"NumBtn\",\n        children: \"9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onOperator,\n        value: \"+\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onOperator,\n        value: \"-\",\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onOperator,\n        value: \"*\",\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onOperator,\n        value: \"/\",\n        children: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.calculate,\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/nb201803m042/Documents/823/10.work/90.勉強/90.自学習/50.React/01_calculator/training-for-react-calculator/src/components/NumBtn.js"],"names":["React","NumBtn","Component","constructor","input","event","state","operator","setState","displayNum","target","value","inputNum","onOperator","calculate","Number","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"../css/NumBtn.css\";\n\nexport class NumBtn extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      displayNum: \"\",\n      inputNum : \"\",\n      operator: \"\",\n    };\n  }\n\n  render(){\n    return(\n      <div>\n        <p>displayNum : {this.state.displayNum}</p>\n        <p>inputNum : {this.state.inputNum}</p>\n        <button onClick={this.input} value={0} className=\"NumBtn\">0</button>\n        <button onClick={this.input} value={1} className=\"NumBtn\">1</button>\n        <button onClick={this.input} value={2} className=\"NumBtn\">2</button>\n        <button onClick={this.input} value={3} className=\"NumBtn\">3</button>\n        <button onClick={this.input} value={4} className=\"NumBtn\">4</button>\n        <button onClick={this.input} value={5} className=\"NumBtn\">5</button>\n        <button onClick={this.input} value={6} className=\"NumBtn\">6</button>\n        <button onClick={this.input} value={7} className=\"NumBtn\">7</button>\n        <button onClick={this.input} value={8} className=\"NumBtn\">8</button>\n        <button onClick={this.input} value={9} className=\"NumBtn\">9</button>\n        <button onClick={this.onOperator} value={\"+\"}>+</button>\n        <button onClick={this.onOperator} value={\"-\"}>-</button>\n        <button onClick={this.onOperator} value={\"*\"}>x</button>\n        <button onClick={this.onOperator} value={\"/\"}>/</button>\n        <button onClick={this.calculate}>=</button>\n      </div>\n    )\n  }\n\n  input = (event) => {\n    if(this.state.operator === \"\") {\n      this.setState({displayNum: this.state.displayNum + event.target.value});\n    } else {\n      this.setState({inputNum: this.state.inputNum + event.target.value});\n    }\n  }\n\n  onOperator = (event) => {\n    this.setState({\n      operator: event.target.value\n    });\n  }\n  calculate = () => {\n    switch(this.state.operator){\n      case '+':\n        this.setState({\n          displayNum: Number(this.state.displayNum) + Number(this.state.inputNum)\n        });\n        break;\n      case '-':\n        this.setState({\n          displayNum: Number(this.state.displayNum) - Number(this.state.inputNum)\n        });\n        break;\n      case '*':\n        this.setState({\n          displayNum: Number(this.state.displayNum) * Number(this.state.inputNum)\n        });\n        break;\n      case '/':\n        this.setState({\n          displayNum: Number(this.state.displayNum) / Number(this.state.inputNum)\n        });\n        break;\n    }\n    this.setState({inputNum: \"\"});\n  }\n}\n"]},"metadata":{},"sourceType":"module"}